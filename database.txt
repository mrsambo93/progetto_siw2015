--
-- PostgreSQL database dump
--

-- Dumped from database version 9.3.8
-- Dumped by pg_dump version 9.3.5
-- Started on 2015-06-17 12:53:05 CEST

SET statement_timeout = 0;
SET lock_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SET check_function_bodies = false;
SET client_min_messages = warning;

--
-- TOC entry 178 (class 3079 OID 11756)
-- Name: plpgsql; Type: EXTENSION; Schema: -; Owner: 
--

CREATE EXTENSION IF NOT EXISTS plpgsql WITH SCHEMA pg_catalog;


--
-- TOC entry 2000 (class 0 OID 0)
-- Dependencies: 178
-- Name: EXTENSION plpgsql; Type: COMMENT; Schema: -; Owner: 
--

COMMENT ON EXTENSION plpgsql IS 'PL/pgSQL procedural language';


SET search_path = public, pg_catalog;

SET default_tablespace = '';

SET default_with_oids = false;

--
-- TOC entry 170 (class 1259 OID 16485)
-- Name: cliente; Type: TABLE; Schema: public; Owner: pingofdeath; Tablespace: 
--

CREATE TABLE cliente (
    email character varying(255) NOT NULL,
    cognome character varying(255) NOT NULL,
    datadinascita date,
    datadiregistrazione timestamp without time zone NOT NULL,
    id bigint,
    nome character varying(255) NOT NULL,
    password character varying(255) NOT NULL,
    indirizzo_id bigint NOT NULL
);


ALTER TABLE public.cliente OWNER TO pingofdeath;

--
-- TOC entry 171 (class 1259 OID 16493)
-- Name: fornitore; Type: TABLE; Schema: public; Owner: pingofdeath; Tablespace: 
--

CREATE TABLE fornitore (
    id bigint NOT NULL,
    email character varying(255) NOT NULL,
    partitaiva character varying(255) NOT NULL,
    telefono character varying(255) NOT NULL,
    indirizzo_id bigint
);


ALTER TABLE public.fornitore OWNER TO pingofdeath;

--
-- TOC entry 172 (class 1259 OID 16501)
-- Name: fornitore_prodotto; Type: TABLE; Schema: public; Owner: pingofdeath; Tablespace: 
--

CREATE TABLE fornitore_prodotto (
    fornitori_id bigint,
    prodotti_id bigint
);


ALTER TABLE public.fornitore_prodotto OWNER TO pingofdeath;

--
-- TOC entry 173 (class 1259 OID 16504)
-- Name: indirizzo; Type: TABLE; Schema: public; Owner: pingofdeath; Tablespace: 
--

CREATE TABLE indirizzo (
    id bigint NOT NULL,
    citta character varying(255) NOT NULL,
    codicepostale character varying(255) NOT NULL,
    regione character varying(255) NOT NULL,
    stato character varying(255) NOT NULL,
    via character varying(255) NOT NULL
);


ALTER TABLE public.indirizzo OWNER TO pingofdeath;

--
-- TOC entry 174 (class 1259 OID 16512)
-- Name: openjpa_sequence_table; Type: TABLE; Schema: public; Owner: pingofdeath; Tablespace: 
--

CREATE TABLE openjpa_sequence_table (
    id smallint NOT NULL,
    sequence_value bigint
);


ALTER TABLE public.openjpa_sequence_table OWNER TO pingofdeath;

--
-- TOC entry 175 (class 1259 OID 16517)
-- Name: ordine; Type: TABLE; Schema: public; Owner: pingofdeath; Tablespace: 
--

CREATE TABLE ordine (
    id bigint NOT NULL,
    dataapertura timestamp without time zone NOT NULL,
    datachiusura timestamp without time zone,
    dataevasione timestamp without time zone,
    cliente_email character varying(255)
);


ALTER TABLE public.ordine OWNER TO pingofdeath;

--
-- TOC entry 176 (class 1259 OID 16522)
-- Name: prodotto; Type: TABLE; Schema: public; Owner: pingofdeath; Tablespace: 
--

CREATE TABLE prodotto (
    id bigint NOT NULL,
    codice character varying(255) NOT NULL,
    descrizione character varying(2000),
    nome character varying(255) NOT NULL,
    prezzo real,
    qtamagazzino integer
);


ALTER TABLE public.prodotto OWNER TO pingofdeath;

--
-- TOC entry 177 (class 1259 OID 16530)
-- Name: rigaordine; Type: TABLE; Schema: public; Owner: pingofdeath; Tablespace: 
--

CREATE TABLE rigaordine (
    id bigint NOT NULL,
    prezzounitario real NOT NULL,
    qtaordinata integer NOT NULL,
    ordine_id bigint,
    prodotto_id bigint
);


ALTER TABLE public.rigaordine OWNER TO pingofdeath;

--
-- TOC entry 1985 (class 0 OID 16485)
-- Dependencies: 170
-- Data for Name: cliente; Type: TABLE DATA; Schema: public; Owner: pingofdeath
--

COPY cliente (email, cognome, datadinascita, datadiregistrazione, id, nome, password, indirizzo_id) FROM stdin;
mario@siw.com	Rossi	1990-09-07	2015-06-17 10:01:15.202	3	Mario	mrossi	53
alice@siw.com	Smith	1980-08-04	2015-06-17 10:03:27.23	4	Alice	AliceSmith80	54
bob@siw.com	Smith	1978-08-02	2015-06-17 10:03:51.806	5	Bob	bob78	55
greg@siw.com	Smith	1990-08-21	2015-06-17 10:04:18.806	6	Greg	greg90	56
stefano@siw.com	Silvi	1993-05-04	2015-06-17 10:00:12.5	2	Stefano	qwerty	52
niccolo@siw.com	Regini	1993-02-01	2015-06-17 09:58:48.76	1	Niccolo	123456	51
\.


--
-- TOC entry 1986 (class 0 OID 16493)
-- Dependencies: 171
-- Data for Name: fornitore; Type: TABLE DATA; Schema: public; Owner: pingofdeath
--

COPY fornitore (id, email, partitaiva, telefono, indirizzo_id) FROM stdin;
251	help@amazon.com	LU-3456721	+44199800111	57
252	ibs@ibs.it	IT-04567456	+39025656456	58
\.


--
-- TOC entry 1987 (class 0 OID 16501)
-- Dependencies: 172
-- Data for Name: fornitore_prodotto; Type: TABLE DATA; Schema: public; Owner: pingofdeath
--

COPY fornitore_prodotto (fornitori_id, prodotti_id) FROM stdin;
252	102
251	102
252	106
251	101
252	105
251	105
252	107
\.


--
-- TOC entry 1988 (class 0 OID 16504)
-- Dependencies: 173
-- Data for Name: indirizzo; Type: TABLE DATA; Schema: public; Owner: pingofdeath
--

COPY indirizzo (id, citta, codicepostale, regione, stato, via) FROM stdin;
51	Roma	00100	Lazio	Italia	Via della magliana 1
52	Roma	00100	Lazio	Italia	Lungotevere Dante 9
53	Roma	00100	Lazio	Italia	Via Enrico Fermi 2
54	Roma	00100	Lazio	Italia	Via di Val Tellina 7
55	Roma	00100	Lazio	Italia	Viale di Trastevere 90
56	Roma	00100	Lazio	Italia	Via Pio IV 32
57	Lussemburgo	2561	Lussemburgo	Lussemburgo	45 Rue de Strasbourg
58	Assago	2561	Lombardia	Italia	Via Giuseppe Verdi
\.


--
-- TOC entry 1989 (class 0 OID 16512)
-- Dependencies: 174
-- Data for Name: openjpa_sequence_table; Type: TABLE DATA; Schema: public; Owner: pingofdeath
--

COPY openjpa_sequence_table (id, sequence_value) FROM stdin;
0	301
\.


--
-- TOC entry 1990 (class 0 OID 16517)
-- Dependencies: 175
-- Data for Name: ordine; Type: TABLE DATA; Schema: public; Owner: pingofdeath
--

COPY ordine (id, dataapertura, datachiusura, dataevasione, cliente_email) FROM stdin;
152	2015-06-17 10:17:56.729	2015-06-17 10:18:32.806	\N	stefano@siw.com
151	2015-06-17 10:17:15.407	2015-06-17 10:17:33.296	2015-06-17 10:19:43.263	niccolo@siw.com
\.


--
-- TOC entry 1991 (class 0 OID 16522)
-- Dependencies: 176
-- Data for Name: prodotto; Type: TABLE DATA; Schema: public; Owner: pingofdeath
--

COPY prodotto (id, codice, descrizione, nome, prezzo, qtamagazzino) FROM stdin;
102	0984881212	Armando Fox is an Adjunct Associate Professor at UC Berkeley and a co-founder of the Berkeley AMP Lab. During his previous time at Stanford, he received teaching and mentoring awards from the Associated Students of Stanford University, the Society of Women Engineers, and Tau Beta Pi Engineering Honor Society. He was named one of the "Scientific American 50" in 2003 and is the recipient of an NSF CAREER award and the Gilbreth Lectureship of the National Academy of Engineering. In previous lives he helped design the Intel Pentium Pro microprocessor and founded a successful startup to commercialize his UC Berkeley dissertation research on mobile computing. He received his other degrees in electrical engineering and computer science from MIT and the University of Illinois and is an ACM Distinguished Member. David Patterson is the Pardee Professor of Computer Science at UC Berkeley and is currently Director of the Parallel Computing Lab. In the past, he served as Chair of Berkeley's CS Division, Chair of the CRA, and President of the ACM. His best-known research projects are Reduced Instruction Set Computers (RISC), Redundant Arrays of Inexpensive Disks (RAID), and Network of Workstations (NOW). This research led to many papers, 5 books, and about 30 of honors, including election to the National Academy of Engineering, the National Academy of Sciences, the Silicon Valley Engineering Hall of Fame, and Fellow of the Computer History Museum. His teaching awards include the Distinguished Teaching Award (UC Berkeley), the Karlstrom Outstanding Educator Award (ACM), the Mulligan Education Medal (IEEE), and the Undergraduate Teaching Award (IEEE). He received all his degrees from UCLA. 	Engineering Long-Lasting Software	70.25	0
106	978-1-4302-2889-9 	Java Enterprise Edition (Java EE) continues to be one of the leading Java technologies and platforms from Oracle (previously Sun). Beginning Java EE 6 Platform with GlassFish 3, Second Edition is this first tutorial book on the final version of the Java EE 6 Platform.\r\n\r\nStep by step and easy to follow, this book describes many of the Java EE 6 specifications and reference implementations, and shows them in action using practical examples. This book uses the new version of GlassFish 3 to deploy and administer the code examples.\r\n\r\nWritten by an expert member of the Java EE 6 specification request and review board in the Java Community Process (JCP), this book contains the best information possible, from an expertâ€™s perspective on enterprise Java technologies.\r\n	Beginning Java EE 6 with GlassFish 3	37.25	0
101	B000SEIBB8	Capturing a wealth of experience about the design of object-oriented software, four top-notch designers present a catalog of simple and succinct solutions to commonly occurring design problems. Previously undocumented, these 23 patterns allow designers to create more flexible, elegant, and ultimately reusable designs without having to rediscover the design solutions themselves.\r\n\r\nThe authors begin by describing what patterns are and how they can help you design object-oriented software. They then go on to systematically name, explain, evaluate, and catalog recurring designs in object-oriented systems. With Design Patterns as your guide, you will learn how these important patterns fit into the software development process, and how you can leverage them to solve your own design problems most efficiently.\r\n\r\nEach pattern describes the circumstances in which it is applicable, when it can be applied in view of other design constraints, and the consequences and trade-offs of using the pattern within a larger design. All patterns are compiled from real systems and are based on real-world examples. Each pattern also includes code that demonstrates how it may be implemented in object-oriented programming languages like C++ or Smalltalk.	Design Patterns	25.4699993	4
105	0132350882	A Handbook of Agile Software Craftsmanship 	Clean Code	25.9899998	8
107	8871922700	\r\n\r\nIl libro costituisce un'introduzione lucida e precisa all'analisi e alla progettazione orientata agli oggetti (OOA/D).\r\n\r\nLe precedenti edizioni si sono rivelate un best-seller mondiale nel settore professionale e accademico, unanimemente apprezzate da tutta la comunitÃ  della progettazione software, e sono state tradotte in piÃ¹ di 10 lingue.\r\n\r\nFacendo leva sulla propria esperienza senza uguali come consulente e formatore aziendale, Craig Larman aiuta i lettori a comprendere i requisiti evolutivi e i casi d'uso, la modellazione degli oggetti di dominio, la progettazione guidata dalle responsabilitÃ , la progettazione OO essenziale, le architetture a strati, la notazione UML e le best practice, insegnando come creare sistemi ben strutturati, robusti e mantenibili.\r\n\r\nIl libro Ã¨ rivolto agli studenti che seguono Corsi di Laurea in informatica, per gli insegnamenti di ingegneria del software e di progettazione orientata agli oggetti.\r\nIl libro Ã¨ anche un ottimo strumento per sviluppatori e professionisti che hanno una certa familiaritÃ  con la OOA/D e desiderano imparare la notazione UML, applicare i pattern o approfondire le proprie capacitÃ  di analisi e progettazione.	Applicare UML e i pattern	43	58
\.


--
-- TOC entry 1992 (class 0 OID 16530)
-- Dependencies: 177
-- Data for Name: rigaordine; Type: TABLE DATA; Schema: public; Owner: pingofdeath
--

COPY rigaordine (id, prezzounitario, qtaordinata, ordine_id, prodotto_id) FROM stdin;
201	25.4699993	1	151	101
202	43	2	151	107
203	70.25	5	152	102
204	37.25	1	152	106
205	25.4699993	1	152	101
206	43	1	152	107
\.


--
-- TOC entry 1858 (class 2606 OID 16492)
-- Name: cliente_pkey; Type: CONSTRAINT; Schema: public; Owner: pingofdeath; Tablespace: 
--

ALTER TABLE ONLY cliente
    ADD CONSTRAINT cliente_pkey PRIMARY KEY (email);


--
-- TOC entry 1860 (class 2606 OID 16500)
-- Name: fornitore_pkey; Type: CONSTRAINT; Schema: public; Owner: pingofdeath; Tablespace: 
--

ALTER TABLE ONLY fornitore
    ADD CONSTRAINT fornitore_pkey PRIMARY KEY (id);


--
-- TOC entry 1862 (class 2606 OID 16511)
-- Name: indirizzo_pkey; Type: CONSTRAINT; Schema: public; Owner: pingofdeath; Tablespace: 
--

ALTER TABLE ONLY indirizzo
    ADD CONSTRAINT indirizzo_pkey PRIMARY KEY (id);


--
-- TOC entry 1864 (class 2606 OID 16516)
-- Name: openjpa_sequence_table_pkey; Type: CONSTRAINT; Schema: public; Owner: pingofdeath; Tablespace: 
--

ALTER TABLE ONLY openjpa_sequence_table
    ADD CONSTRAINT openjpa_sequence_table_pkey PRIMARY KEY (id);


--
-- TOC entry 1866 (class 2606 OID 16521)
-- Name: ordine_pkey; Type: CONSTRAINT; Schema: public; Owner: pingofdeath; Tablespace: 
--

ALTER TABLE ONLY ordine
    ADD CONSTRAINT ordine_pkey PRIMARY KEY (id);


--
-- TOC entry 1868 (class 2606 OID 16529)
-- Name: prodotto_pkey; Type: CONSTRAINT; Schema: public; Owner: pingofdeath; Tablespace: 
--

ALTER TABLE ONLY prodotto
    ADD CONSTRAINT prodotto_pkey PRIMARY KEY (id);


--
-- TOC entry 1870 (class 2606 OID 16534)
-- Name: rigaordine_pkey; Type: CONSTRAINT; Schema: public; Owner: pingofdeath; Tablespace: 
--

ALTER TABLE ONLY rigaordine
    ADD CONSTRAINT rigaordine_pkey PRIMARY KEY (id);


--
-- TOC entry 1871 (class 2606 OID 16535)
-- Name: cliente_indirizzo_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: pingofdeath
--

ALTER TABLE ONLY cliente
    ADD CONSTRAINT cliente_indirizzo_id_fkey FOREIGN KEY (indirizzo_id) REFERENCES indirizzo(id) DEFERRABLE;


--
-- TOC entry 1872 (class 2606 OID 16540)
-- Name: fornitore_indirizzo_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: pingofdeath
--

ALTER TABLE ONLY fornitore
    ADD CONSTRAINT fornitore_indirizzo_id_fkey FOREIGN KEY (indirizzo_id) REFERENCES indirizzo(id) DEFERRABLE;


--
-- TOC entry 1873 (class 2606 OID 16545)
-- Name: fornitore_prodotto_fornitori_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: pingofdeath
--

ALTER TABLE ONLY fornitore_prodotto
    ADD CONSTRAINT fornitore_prodotto_fornitori_id_fkey FOREIGN KEY (fornitori_id) REFERENCES fornitore(id) DEFERRABLE;


--
-- TOC entry 1874 (class 2606 OID 16550)
-- Name: fornitore_prodotto_prodotti_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: pingofdeath
--

ALTER TABLE ONLY fornitore_prodotto
    ADD CONSTRAINT fornitore_prodotto_prodotti_id_fkey FOREIGN KEY (prodotti_id) REFERENCES prodotto(id) DEFERRABLE;


--
-- TOC entry 1875 (class 2606 OID 16555)
-- Name: ordine_cliente_email_fkey; Type: FK CONSTRAINT; Schema: public; Owner: pingofdeath
--

ALTER TABLE ONLY ordine
    ADD CONSTRAINT ordine_cliente_email_fkey FOREIGN KEY (cliente_email) REFERENCES cliente(email) DEFERRABLE;


--
-- TOC entry 1876 (class 2606 OID 16560)
-- Name: rigaordine_ordine_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: pingofdeath
--

ALTER TABLE ONLY rigaordine
    ADD CONSTRAINT rigaordine_ordine_id_fkey FOREIGN KEY (ordine_id) REFERENCES ordine(id) DEFERRABLE;


--
-- TOC entry 1877 (class 2606 OID 16565)
-- Name: rigaordine_prodotto_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: pingofdeath
--

ALTER TABLE ONLY rigaordine
    ADD CONSTRAINT rigaordine_prodotto_id_fkey FOREIGN KEY (prodotto_id) REFERENCES prodotto(id) DEFERRABLE;


--
-- TOC entry 1999 (class 0 OID 0)
-- Dependencies: 5
-- Name: public; Type: ACL; Schema: -; Owner: postgres
--

REVOKE ALL ON SCHEMA public FROM PUBLIC;
REVOKE ALL ON SCHEMA public FROM postgres;
GRANT ALL ON SCHEMA public TO postgres;
GRANT ALL ON SCHEMA public TO PUBLIC;


-- Completed on 2015-06-17 12:53:10 CEST

--
-- PostgreSQL database dump complete
--

